{"swagger": "2.0", "info": {"title": "Posts API", "description": "API for managing posts.", "version": "1.0"}, "host": "127.0.0.1:8000", "schemes": ["http"], "basePath": "/api", "consumes": ["application/json"], "produces": ["application/json"], "securityDefinitions": {"Basic": {"type": "basic"}}, "security": [{"Basic": []}], "paths": {"/post/create": {"post": {"operationId": "post_post", "summary": "Create a post", "description": "This endpoint creates a new post. All fields must be specified. User id needs to be a valid id of a user registered at https://jsonplaceholder.typicode.com/.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/PostPost"}}], "responses": {"200": {"description": "Post successfully created.", "schema": {"$ref": "#/definitions/Post"}}, "400": {"description": "Bad request."}, "403": {"description": "Unregistered user."}}, "tags": ["post"]}, "parameters": []}, "/post/{post_id}": {"get": {"operationId": "get_post", "summary": "View a post", "description": "This endpoint returns the post with the given id.", "parameters": [], "responses": {"200": {"description": "Post with given id successfully returned.", "schema": {"$ref": "#/definitions/Post"}}}, "tags": ["post"]}, "parameters": [{"name": "post_id", "in": "path", "required": true, "type": "string"}]}, "/post/{post_id}/delete": {"delete": {"operationId": "delete_post", "summary": "Delete a post", "description": "This endpoint deletes the post with given id.", "parameters": [], "responses": {"200": {"description": "Post successfully deleted."}, "404": {"description": "Post with given id does not exist."}}, "tags": ["post"]}, "parameters": [{"name": "post_id", "in": "path", "required": true, "type": "string"}]}, "/post/{post_id}/patch": {"patch": {"operationId": "patch_post", "summary": "Partially update a post", "description": "This endpoint updates the post with given id. Fields that can be updated are: title and body. Only changed fields need to be specified.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/PostPatch"}}], "responses": {"200": {"description": "Post successfully updated.", "schema": {"$ref": "#/definitions/Post"}}, "400": {"description": "Bad request."}, "404": {"description": "Post with given id does not exist."}}, "tags": ["post"]}, "parameters": [{"name": "post_id", "in": "path", "required": true, "type": "string"}]}, "/post/{post_id}/put": {"put": {"operationId": "put_post", "summary": "Update a post", "description": "This endpoint updates the post with given id. Fields that cam be updated are: title and body. Both of these fields must be specified.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/PostPut"}}], "responses": {"200": {"description": "Post successfully updated.", "schema": {"$ref": "#/definitions/Post"}}, "400": {"description": "Bad request."}, "404": {"description": "Post with given id does not exist."}}, "tags": ["post"]}, "parameters": [{"name": "post_id", "in": "path", "required": true, "type": "string"}]}, "/user/{user_id}/posts": {"get": {"operationId": "get_user_posts", "summary": "View all posts of a user", "description": "This endpoint returns all posts of the user with the given id.", "parameters": [], "responses": {"200": {"description": "All posts published by user with given userId successfully returned.", "schema": {"$ref": "#/definitions/Post"}}}, "tags": ["user"]}, "parameters": [{"name": "user_id", "in": "path", "required": true, "type": "string"}]}}, "definitions": {"PostPost": {"required": ["userId", "title", "body"], "type": "object", "properties": {"userId": {"title": "UserId", "type": "integer"}, "title": {"title": "Title", "type": "string", "maxLength": 200, "minLength": 1}, "body": {"title": "Body", "type": "string", "maxLength": 2000, "minLength": 1}}}, "Post": {"required": ["id", "userId", "title", "body"], "type": "object", "properties": {"id": {"title": "Id", "type": "integer"}, "userId": {"title": "UserId", "type": "integer"}, "title": {"title": "Title", "type": "string", "maxLength": 200, "minLength": 1}, "body": {"title": "Body", "type": "string", "maxLength": 2000, "minLength": 1}}}, "PostPatch": {"type": "object", "properties": {"title": {"title": "Title", "type": "string", "maxLength": 200, "minLength": 1}, "body": {"title": "Body", "type": "string", "maxLength": 2000, "minLength": 1}}}, "PostPut": {"required": ["title", "body"], "type": "object", "properties": {"title": {"title": "Title", "type": "string", "maxLength": 200, "minLength": 1}, "body": {"title": "Body", "type": "string", "maxLength": 2000, "minLength": 1}}}}}